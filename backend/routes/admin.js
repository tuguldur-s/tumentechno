const router = require('express').Router();
const { catchErrors } = require('../handlers/errorHandler');
const adminController  = require('../controllers/adminController');
const productController  = require('../controllers/productController');
const auth = require('../middlewares/auth');

router.post('/dashboard', auth, catchErrors(adminController.dashboard));
router.post('/login', catchErrors(adminController.login));
router.post('/update-category-image', auth, catchErrors(adminController.changeCategogryImage));
router.post('/update-category-icon', auth, catchErrors(adminController.changeCategogryIcon));
router.post('/update-brand-image', auth, catchErrors(adminController.changeBrandImage));
router.post('/update-special', auth, catchErrors(adminController.updateSpecial));
router.post('/update-product-info', auth, catchErrors(adminController.updateProducts));
router.post('/download-new-product', auth, catchErrors(adminController.downloadNewProduct));
router.post('/download-new-brands', auth, catchErrors(adminController.updateBrand));
router.post('/download-new-sub-category', auth, catchErrors(adminController.updateSubCategory));
router.post('/download-new-category', auth, catchErrors(adminController.updateCategory));
router.post('/add-home-banner', auth, catchErrors(adminController.addHomeBanner));
router.post('/delete-home-banner', auth, catchErrors(adminController.deleteHomeBanner));
router.post('/update-specs', auth, catchErrors(adminController.updateSpecs));
router.post('/add-new-spec', auth, catchErrors(adminController.addNewSpec));
router.post('/orders', auth, catchErrors(adminController.orders));
router.post('/search-order', auth, catchErrors(adminController.searchOrder));
router.post('/show-order', auth, catchErrors(adminController.showOrder));
router.post('/change-order-status', auth, catchErrors(adminController.changeOrderStatus));
router.post('/all-product', auth, catchErrors(adminController.allproduct));
router.post('/delete-product', auth, catchErrors(adminController.deleteProduct));
router.post('/product-spec', auth, catchErrors(adminController.specs));
router.post('/update-product-spec', auth, catchErrors(adminController.updateProductSpec));
router.post('/edit-product', auth, catchErrors(adminController.productEdit));
router.post('/get-edit-product', auth, catchErrors(adminController.getProductEdit));
router.post('/update-product-text', auth, catchErrors(adminController.productEditSubmit));
router.post('/get-coupons', auth, catchErrors(adminController.getAllCoupon));
router.post('/delete-coupon', auth, catchErrors(adminController.deleteCoupon));
router.post('/add-coupon', auth, catchErrors(adminController.addCoupon));
router.post('/get-quick-category', auth, catchErrors(adminController.getQuickCategory));
router.post('/add-quick-category', auth, catchErrors(adminController.addQuickCategory));
router.post('/delete-quick-category', auth, catchErrors(adminController.deleteQuickCategory));
router.post('/get-featured', auth, catchErrors(adminController.getFeatured));
router.post('/add-featured', auth, catchErrors(adminController.addFeature));
router.post('/delete-featured', auth, catchErrors(adminController.deleteFeature));
router.post('/get-discount', auth, catchErrors(adminController.getDiscount));
router.post('/delete-discount', auth, catchErrors(adminController.deleteDiscount));
router.post('/add-discount', auth, catchErrors(adminController.addDiscount));
router.post('/get-user', auth, catchErrors(adminController.getUsers));
router.post('/get-employee', auth, catchErrors(adminController.getEmployees));
router.post('/user-to-emp', auth, catchErrors(adminController.userToEmp));
router.post('/emp-to-user', auth, catchErrors(adminController.empToUser));
router.post('/change-brand-background', auth, catchErrors(adminController.changeBrandBackground));
router.post('/add-new-banner-2', auth, catchErrors(adminController.addNewBanner2));
router.post('/delete-banner-2', auth, catchErrors(adminController.deleteBanner2));
router.post('/delete-brand', auth, catchErrors(adminController.deleteBrand));
router.post('/add-new-event', auth, catchErrors(adminController.addNewEvent));
router.post('/delete-event', auth, catchErrors(adminController.DeleteEvent));
router.post('/add-product-to-event', auth, catchErrors(adminController.AddProductEvent));
router.post('/merge-images', auth, catchErrors(adminController.MergeImages));
router.post('/product-detail', auth, catchErrors(adminController.getProductDetail));
router.post('/update-bonus-all', auth, catchErrors(productController.updateBonusAll));

module.exports = router;